/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.newapp;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * UserDetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`user details`")
public class UserDetails implements Serializable {

    private Integer userDetails;
    private Integer users;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] userPic;
    private String userAddress;
    private Users usersByUsers;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "\"user details_user details_seq\"" , schema = "public", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`user details`", nullable = false, scale = 0, precision = 10)
    public Integer getUserDetails() {
        return this.userDetails;
    }

    public void setUserDetails(Integer userDetails) {
        this.userDetails = userDetails;
    }

    @Column(name = "`users`", nullable = true, scale = 0, precision = 19)
    public Integer getUsers() {
        return this.users;
    }

    public void setUsers(Integer users) {
        this.users = users;
    }

    @Column(name = "`user pic`", nullable = true)
    public byte[] getUserPic() {
        return this.userPic;
    }

    public void setUserPic(byte[] userPic) {
        this.userPic = userPic;
    }

    @Column(name = "`user address`", nullable = true, length = 255111)
    public String getUserAddress() {
        return this.userAddress;
    }

    public void setUserAddress(String userAddress) {
        this.userAddress = userAddress;
    }

    
    
    public Users getUsersByUsers() {
        return this.usersByUsers;
    }

    public void setUsersByUsers(Users usersByUsers) {
        if(usersByUsers != null) {
            this.users = usersByUsers.getUserId();
        }

        this.usersByUsers = usersByUsers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof UserDetails)) return false;
        final UserDetails userDetailsInstance = (UserDetails) o;
        return Objects.equals(getUserDetails(), userDetailsInstance.getUserDetails());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getUserDetails());
    }
}

